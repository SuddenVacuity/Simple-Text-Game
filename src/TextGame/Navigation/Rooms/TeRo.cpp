/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
)				TeRo.cpp
)					contains room information for Testing Room
)
)			
)			
)
)			
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

#include <TextGame/Navigation/Rooms/RoomInfo.hpp>

namespace TextGame
{
	static const int TeRo_Rows = 16;
	static const int TeRo_Cols = 16;

char TeRo_roomMap[TeRo_Rows][TeRo_Cols] =
{   // 1    2    3    4    5    6    7    8    9    10   11   12   13   14   15   16	
	{ 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O' },  // 1
	{ 'O', '.', '.', '.', '.', '=', 's', 'O', 's', '.', '.', '.', '.', '.', '.', 'O' },  // 2
	{ 'O', '.', '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.', '.', '.', 'O' },  // 3
	{ 'O', '.', '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', 'O', '.', '.', 'O' },  // 4
	{ 'O', '.', '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', 'O', '.', '.', 'O' },  // 5
	{ 'O', '.', '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', 'O', '=', '=', 'O' },  // 6
	{ 'O', '.', '.', '.', 'O', '.', '.', 'O', '.', '.', '.', '.', 'O', '=', '=', 'O' },  // 7
	{ 'O', '.', '.', '.', 'O', '.', 'T', 'E', 'S', 'T', '.', '.', 'O', '=', '=', 'O' },  // 8
	{ 'O', '.', '.', '.', 'O', '.', '.', '.', '.', '.', '.', '.', 'O', '.', '.', 'O' },  // 9
	{ 'O', '.', '.', '.', 'O', '.', '.', '.', '.', '.', '.', '.', 'O', '.', '.', 'O' },  // 10
	{ 'O', '.', '.', '.', 'O', '.', '.', '.', '.', '.', '.', '.', 'O', 'D', 'G', 'O' },  // 11
	{ 'O', '.', '.', '.', 'O', '.', '.', '.', '.', '.', '.', '.', 'O', 'A', 'E', 'O' },  // 12
	{ 'O', '.', '.', '.', 'O', 'N', 'O', 'T', 'S', 'A', 'F', 'E', 'O', 'N', 'R', 'O' },  // 13
	{ 'O', '.', '.', '.', 'O', ';', ';', ';', ';', ';', ';', ';', 'O', '.', '.', 'O' },  // 14
	{ 'O', '.', '.', '.', 'O', ';', ';', ';', ';', ';', ';', ';', 'O', '.', '.', 'O' },  // 15
	{ 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O' }   // 16
};

int TeRo_roomObject[TeRo_Rows][TeRo_Cols] =
{   //1    2    3    4    5    6    7    8    9    10   11   12   13   14   15   16		
	{   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4 },  // 1
	{   4, 103, 103, 103, 103, 110,  11,   4,  12, 103, 103, 103, 103, 103, 103,   4 },  // 2
	{   4, 103, 103, 103, 103, 103, 103,   4, 103, 103, 103, 103, 103, 103, 103,   4 },  // 3
	{   4, 103, 103, 103, 103, 103, 103,   4, 103, 103, 103, 103,   4, 103, 103,   4 },  // 4
	{   4, 103, 103, 103, 103, 103, 103,   4, 103, 103, 103, 103,   4, 103, 103,   4 },  // 5
	{   4, 103, 103, 103, 103, 103, 103,   4, 103, 103, 103, 103,   4, 320, 320,   4 },  // 6
	{   4, 103, 103, 103,   4, 103, 103,   4, 103, 103, 103, 103,   4, 320, 320,   4 },  // 7
	{   4, 103, 103, 103,   4, 103, 103, 103, 103, 103, 103, 103,   4, 320, 320,   4 },  // 8
	{   4, 103, 103, 103,   4, 103, 103, 103, 103, 103, 103, 103,   4, 103, 103,   4 },  // 9
	{   4, 103, 103, 103,   4, 103, 103, 103, 103, 103, 103, 130,   4, 103, 103,   4 },  // 10
	{   4, 103, 103, 103,   4, 103, 103, 103, 103, 103, 103, 130,   4, 421, 421,   4 },  // 11
	{   4, 103, 103, 103,   4, 103, 103, 103, 103, 103, 103, 130,   4, 421, 421,   4 },  // 12
	{   4, 103, 103, 103,   4, 218, 218, 218, 218, 218, 218, 218,   4, 421, 421,   4 },  // 13
	{   4, 103, 103, 103,   4, 218, 218, 218, 218, 218, 218, 218,   4, 103, 103,   4 },  // 14
	{   4, 103, 103, 103,   4, 218, 218, 218, 218, 218, 218, 218,   4, 103, 103,   4 },  // 15
	{   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4 }   // 16
};

// return single object
int TeRo_returnObject(int* location)
{
	return TeRo_roomObject[location[0]][location[1]];
}

// return mapo array
char** TeRo_returnMap() // be sure to delete
{
	char** data = new char*[TeRo_Rows];

	// generate table
	for (int i = 0; i < TeRo_Rows; i++)
	{
		data[i] = new char[TeRo_Cols];
		for (int j = 0; j < TeRo_Cols; j++)
			data[i][j] = TeRo_roomMap[i][j];
	}
	return data;
}
/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
)			
)			Test Room 2
)
)			
)			
)
)				
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
	static const int TeRo2_Rows = 16;
	static const int TeRo2_Cols = 16;

char TeRo2_roomMap[TeRo2_Rows][TeRo2_Cols] =
{   // 1    2    3    4    5    6    7    8    9    10   11   12   13   14   15   16	
	{ 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O' },  // 1
	{ 'O', '.', '.', '.', '.', '=', 's', '.', 's', '.', '.', '.', '.', '.', '.', 'O' },  // 2
	{ 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'O' },  // 3
	{ 'O', '.', '.', '.', '.', 'O', '.', '.', '.', '.', 'O', '.', '.', '.', '.', 'O' },  // 4
	{ 'O', '.', '.', '.', 'O', '.', 'O', '.', '.', 'O', '.', 'O', '.', '.', '.', 'O' },  // 5
	{ 'O', '.', '.', '.', '.', '.', ';', '.', '.', ';', '.', '.', '.', '.', '.', 'O' },  // 6
	{ 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'O' },  // 7
	{ 'O', '.', '.', '.', '.', '.', 'T', 'E', 'S', 'T', '.', '.', '.', '.', '.', 'O' },  // 8
	{ 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'O' },  // 9
	{ 'O', '.', '.', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'O', '.', 'O' },  // 10
	{ 'O', '.', '.', '.', 'O', '.', '.', '.', '.', '.', '.', '.', 'O', '.', '.', 'O' },  // 11
	{ 'O', '.', '.', '.', ';', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ';', '.', '.', 'O' },  // 12
	{ 'O', '.', '.', '.', ';', ';', ';', ';', ';', ';', ';', ';', ';', '.', '.', 'O' },  // 13
	{ 'O', '.', '.', '.', '.', ';', ';', ';', ';', ';', ';', ';', '.', '.', '.', 'O' },  // 14
	{ 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'O' },  // 15
	{ 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O' }   // 16
};

/* 0~99 = solid+string, 100~199 = walk+string, 200~299 walk+encounter+string

if(Object >= 0 && Object < 100)
{
int temp = object;
returnRoomString(id, temp);
}
else if(Object >=1 100 && Object < 200)
{
int temp = object - 100;
returnRoomString(id, temp);
}
else if(Object >=1 200 && Object < 300)
{
int temp = object - 200;
returnRoomString(id, temp);
}
else
returnRoomString(id, 0);
*/
int TeRo2_roomObject[TeRo2_Rows][TeRo2_Cols] =
{   //1    2    3    4    5    6    7    8    9    10   11   12   13   14   15   16		
	{ 004, 004, 004, 004, 004, 004, 004, 004, 004, 004, 004, 004, 004, 004, 004, 004 },  // 1
	{ 004, 103, 103, 103, 103, 010, 011, 004, 012, 103, 103, 103, 103, 103, 103, 004 },  // 2
	{ 004, 103, 103, 103, 103, 103, 103, 004, 103, 103, 103, 103, 103, 103, 103, 004 },  // 3
	{ 004, 103, 103, 103, 103, 103, 103, 004, 103, 103, 103, 103, 004, 103, 103, 004 },  // 4
	{ 004, 103, 103, 103, 103, 103, 103, 004, 103, 103, 103, 103, 004, 103, 103, 004 },  // 5
	{ 004, 103, 103, 103, 004, 103, 103, 004, 103, 103, 103, 103, 004, 103, 103, 004 },  // 6
	{ 004, 103, 103, 103, 004, 103, 103, 004, 103, 103, 103, 103, 004, 103, 103, 004 },  // 7
	{ 004, 103, 103, 103, 004, 103, 103, 004, 103, 103, 103, 103, 004, 103, 103, 004 },  // 8
	{ 004, 103, 103, 103, 004, 103, 103, 004, 103, 103, 103, 103, 004, 103, 103, 004 },  // 9
	{ 004, 103, 103, 103, 004, 103, 103, 103, 103, 103, 103, 130, 004, 103, 103, 004 },  // 10
	{ 004, 103, 103, 103, 004, 103, 103, 103, 103, 103, 103, 130, 004, 103, 103, 004 },  // 11
	{ 004, 103, 103, 103, 004, 103, 103, 103, 103, 103, 103, 130, 004, 103, 103, 004 },  // 12
	{ 004, 103, 103, 103, 004, 218, 218, 218, 219, 219, 219, 219, 004, 103, 103, 004 },  // 13
	{ 004, 103, 103, 103, 004, 218, 218, 218, 219, 219, 219, 219, 004, 103, 103, 004 },  // 14
	{ 004, 103, 103, 103, 004, 218, 218, 218, 219, 219, 219, 219, 004, 103, 103, 004 },  // 15
	{ 004, 004, 004, 004, 004, 004, 004, 004, 004, 004, 004, 004, 004, 004, 004, 004 }   // 16
};
} // end TextGame
